---
name: lint (app)

on:
  push:
    branches: [main]
  pull_request:

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      # ---- Go setup ----
      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: "1.24.x"

      - name: Build server and client
        run: |
          GOOS=linux GOARCH=amd64 CGO_ENABLED=0 go build -o /tmp/server ./cmd/server
          GOOS=linux GOARCH=amd64 CGO_ENABLED=0 go build -o /tmp/client ./cmd/client

      # （必要になったら有効化）
      # - name: GolangCI-Lint
      #   uses: golangci/golangci-lint-action@v6
      #   with:
      #     version: v1.64.2
      #     args: --timeout 5m

      # ---- 共通ツール ----
      - name: Install yamllint & jq
        run: |
          python3 -m pip install --upgrade pip
          pip3 install yamllint
          sudo apt-get update -y
          sudo apt-get install -y jq

      # ---- 共通チェック ----
      - name: Run yamllint
        run: yamllint .
      - name: Run markdownlint
        run: npx --yes markdownlint-cli2 **/*.md
      - name: Validate JSON
        run: |
          set -e
          files=$(git ls-files '*.json' || true)
          if [ -n "$files" ]; then
            echo "$files" | xargs -r -n1 jq .
          fi

      # ---- Helm / kubeconform（charts があるときだけ）----
      - name: Check charts presence
        id: have_charts
        run: |
          if [ -d charts ] && ls charts | grep -q .; then
            echo "found=true" >> "$GITHUB_OUTPUT"
          else
            echo "found=false" >> "$GITHUB_OUTPUT"
          fi

      - name: Install kubeconform
        if: steps.have_charts.outputs.found == 'true'
        run: |
          curl -sSL https://github.com/yannh/kubeconform/releases/latest/download/kubeconform-linux-amd64.tar.gz \
          | tar xz -C /usr/local/bin

      - name: Helm lint
        if: steps.have_charts.outputs.found == 'true'
        run: |
          set -e
          for c in charts/*; do
            [ -d "$c" ] || continue
            echo "==> helm lint $c"
            helm lint "$c"
          done

      - name: kubeconform validate (helm template)
        if: steps.have_charts.outputs.found == 'true'
        run: |
          set -e
          for c in charts/*; do
            [ -d "$c" ] || continue
            echo "==> kubeconform validate $c"
            if [ -f "$c/values-kind.yaml" ]; then
              helm template "$c" -f "$c/values-kind.yaml" | kubeconform -strict -ignore-missing-schemas -
            else
              helm template "$c" | kubeconform -strict -ignore-missing-schemas -
            fi
          done
